---
title: Hello, Bach.
date: April 24, 2024
---

```{r echo=FALSE}
knitr::opts_chunk$set(error = TRUE)
```

```{r echo=FALSE}

# Sys.setenv(RETICULATE_PYTHON = "/Users/charles/Documents/digmus/digmusenv/bin/python")
# reticulate::py_config()

```

```{r message=FALSE}
# general datasci toolkit packages
library(tidyverse) # grabbag of datasci tools
library(gt) # for tables
library(pyramidi)

```

# Objective

Animate the *subject* of J. S. Bach's Contrapunctus I as a directed graph using `ggraph`.

The biggest learning curve here is going to be the data export of music; I'm exploring how to produce live animation, but need to break this into a series of small, achievable objectives. The live component will come last, to begin with I need to figure out how to export the data from what I play into something I can understand as data. 

Another quite separate hurdle is to explore expanding my compositions from acoustic to production-infused neoclassical I've always heard in my head. To get started, however, I will use Bach for developing my animation ideas.

# Contrapunctus I

Contrapunctus I is a particularly nice piece of music for this task. It is the opening work of Bach's [*The Art of Fugue*](https://en.wikipedia.org/wiki/The_Art_of_Fugue), and follows a very specific musical structure that Bach was pivotal in developing. 

A *fugue* is a work of polyphonic (melodies that produce vertical harmonies through overlay) that develops a *subject*, a short melodic motif. 

Here is the subject of Contrapunctus I, the focus of this animation project.

![](https://upload.wikimedia.org/score/k/u/kuqreev9vn17n29y7rcsbjjw752x7we/kuqreev9.png)


# Midi to data

```{r }
mfr <- MidiFramer$new('../midi/wikisource-contrapunctus-subject.midi')

```

```{r}
mididat <- mfr$df_notes_long |> select(note, b) |> distinct()

# set the D minor scale 
d_minor <- c('D', 'E', 'F', 'G', 'A', 'Bb', 'C#')

# set the midi number notes for joining 
note <- c(62, 64, 65, 67, 69, 70, 61)

d_minor <- tibble(d_minor, note)

```

# ggraph data structure

Now to convert this table to something that 

Â 
```{r}



```