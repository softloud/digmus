[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "digmussite",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site documents my journey into exploring animating musical composition with directed graphs.\nI was been a professional musician (20 years) for twice as long as a data scientist (10 years), but never married the two passions before."
  },
  {
    "objectID": "hellobach.html",
    "href": "hellobach.html",
    "title": "Hello, Bach.",
    "section": "",
    "text": "# general datasci toolkit packages\nlibrary(tidyverse) # grabbag of datasci tools\nlibrary(gt) # for tables\nlibrary(pyramidi)\n\nWarning: package 'pyramidi' was built under R version 4.3.3\n\n\n\nObjective\nAnimate the subject of J. S. Bach’s Contrapunctus I as a directed graph using ggraph.\nThe biggest learning curve here is going to be the data export of music; I’m exploring how to produce live animation, but need to break this into a series of small, achievable objectives. The live component will come last, to begin with I need to figure out how to export the data from what I play into something I can understand as data.\nAnother quite separate hurdle is to explore expanding my compositions from acoustic to production-infused neoclassical I’ve always heard in my head. To get started, however, I will use Bach for developing my animation ideas.\n\n\nContrapunctus I\nContrapunctus I is a particularly nice piece of music for this task. It is the opening work of Bach’s The Art of Fugue, and follows a very specific musical structure that Bach was pivotal in developing.\nA fugue is a work of polyphonic (melodies that produce vertical harmonies through overlay) that develops a subject, a short melodic motif.\nHere is the subject of Contrapunctus I, the focus of this animation project.\n\n\n\nMidi to data\n\nmfr &lt;- MidiFramer$new('../midi/wikisource-contrapunctus-subject.midi')\n\n\nmididat &lt;- mfr$df_notes_long |&gt; select(note, b) |&gt; distinct()\n\n# set the D minor scale \nd_minor &lt;- c('D', 'E', 'F', 'G', 'A', 'Bb', 'C#')\n\n# set the midi number notes for joining \nnote &lt;- c(62, 64, 65, 67, 69, 70, 61)\n\nd_minor &lt;- tibble(d_minor, note)\n\nsubject_dat &lt;- mididat |&gt;\n    left_join(d_minor, by = 'note') |&gt;\n    mutate(step = rep.int(c('start', 'stop'), times = 12), \n        index = rep(seq(1, 12), each = 2)) |&gt;\n        pivot_wider(names_from = step, values_from = b) |&gt;   \n    mutate(\n        note = as.integer(note),\n        b = start,\n        start = as.integer(round(start)),\n        stop = as.integer(round(stop)),\n        bar = start %/% 16 + 1,\n        bar = as.integer(bar),\n        duration = stop - start\n    ) |&gt;\n    select(d_minor, note, start, duration, bar, b) \n\nwrite_csv(subject_dat, '../mididat.csv')\n\ngtfirsttry &lt;- \nsubject_dat |&gt; gt() |&gt;\n    tab_header(md('![](https://upload.wikimedia.org/score/k/u/kuqreev9vn17n29y7rcsbjjw752x7we/kuqreev9.png)'))\n\ngtsave(gtfirsttry, 'firsttrytab.png')\n\n\n\nggraph data structure"
  },
  {
    "objectID": "about.html#hello-bach",
    "href": "about.html#hello-bach",
    "title": "About",
    "section": "Hello Bach",
    "text": "Hello Bach\nAnimate the subject of Contropunctus I using ggraph and gganimate.\nEach node will be a note, and each edge represents a sequence of two notes. The animation will add edges to the nodes as sequences cumulate."
  },
  {
    "objectID": "about.html#proof-of-concept",
    "href": "about.html#proof-of-concept",
    "title": "About",
    "section": "Proof of concept",
    "text": "Proof of concept\nAnimate Contrapunctus I in R, prerendered."
  },
  {
    "objectID": "about.html#animation-with-dots-in-unity",
    "href": "about.html#animation-with-dots-in-unity",
    "title": "About",
    "section": "Animation with DOTS in Unity",
    "text": "Animation with DOTS in Unity\nAnimate Contrpunctus I in Unity, prerendered."
  },
  {
    "objectID": "about.html#live-music-animation",
    "href": "about.html#live-music-animation",
    "title": "About",
    "section": "Live music animation",
    "text": "Live music animation\nFor live music, I suspect I will have rendering issues using R and midi files.\nThe bluesky plan is to adapt my proof of concept to C# and Unity, connect midi keyboards, and develop software to provide live animations of my algorithmic compositions."
  },
  {
    "objectID": "hellobach.html#garageband-to-midi-bossfight",
    "href": "hellobach.html#garageband-to-midi-bossfight",
    "title": "Hello, Bach.",
    "section": "Garageband to midi bossfight",
    "text": "Garageband to midi bossfight\nMy first attempt at exporting data from garageband failed. I tried converting the raw garageband file but this was not recognised. On closer inspection, it seems I need to dig through this post deeper if I were to successfully convert garageband to midi.\n\nmfr &lt;- MidiFramer$new('../midi/dimus.band.mid')\n\nError in eval(expr, envir, enclos): object 'MidiFramer' not found"
  },
  {
    "objectID": "hellobach.html#garageband-to-midi-bossfight-abandoned",
    "href": "hellobach.html#garageband-to-midi-bossfight-abandoned",
    "title": "Hello, Bach.",
    "section": "Garageband to midi bossfight (abandoned)",
    "text": "Garageband to midi bossfight (abandoned)\nMy first attempt at exporting data from garageband failed. I tried converting the raw garageband file but this was not recognised. On closer inspection, it seems I need to dig through this post deeper if I were to successfully convert garageband to midi.\n\nmfr &lt;- MidiFramer$new('../midi/dimus.band.mid')\n\nError in eval(expr, envir, enclos): object 'MidiFramer' not found"
  },
  {
    "objectID": "hellobach.html#importing-midi-to-r",
    "href": "hellobach.html#importing-midi-to-r",
    "title": "Hello, Bach.",
    "section": "Importing midi to R",
    "text": "Importing midi to R\n\nmfr &lt;- MidiFramer$new('../midi/wikisource-contrapunctus-subject.midi')\n\nLet’s take a look at what we get.\n\n# we have data! \n\nmfr\n\n&lt;MidiFramer&gt;\n  Public:\n    clone: function (deep = FALSE) \n    df_meta: data.frame\n    df_not_notes: data.frame\n    df_notes_long: tbl_df, tbl, data.frame\n    df_notes_wide: tbl_df, tbl, data.frame\n    dfm: tbl_df, tbl, data.frame\n    initialize: function (midi_file_string = NULL) \n    mf: miditapyr.midi_frame.MidiFrames, python.builtin.object\n    midi_file_string: ../midi/wikisource-contrapunctus-subject.midi\n    midi_frame_mod: tbl_df, tbl, data.frame\n    params: list\n    play: function (audiofile = tempfile(\"mf_out_\", fileext = \".mp3\"), \n    populate_r_fields: function () \n    ticks_per_beat: active binding\n    update_notes_wide: function (mod) \n  Private:\n    deep_clone: function (name, value) \n\n\nLet’s dig into these objects and see what we have.\n\nmfr$df_notes_long |&gt; skimr::skim()\n\n\nData summary\n\n\nName\nmfr$df_notes_long\n\n\nNumber of rows\n24\n\n\nNumber of columns\n9\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nlogical\n1\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntype\n0\n1\n7\n7\n0\n1\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nmeta\n0\n1\n0\nFAL: 24\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ni_track\n0\n1\n1.00\n0.00\n1\n1.00\n1.0\n1.00\n1\n▁▁▇▁▁\n\n\nchannel\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nnote\n0\n1\n64.00\n2.32\n61\n62.00\n64.0\n65.00\n69\n▇▃▅▂▂\n\n\ni_note\n0\n1\n3.17\n2.08\n1\n1.75\n2.5\n4.25\n8\n▇▂▃▁▁\n\n\nvelocity\n0\n1\n45.00\n45.97\n0\n0.00\n45.0\n90.00\n90\n▇▁▁▁▇\n\n\nticks\n0\n1\n3920.00\n1995.26\n0\n2304.00\n4224.0\n5760.00\n6528\n▂▃▃▃▇\n\n\nb\n0\n1\n40.83\n20.78\n0\n24.00\n44.0\n60.00\n68\n▂▃▃▃▇\n\n\n\n\n\nThis one has notes, that’s useful. Perhaps b is useful, let’s find out. This has 24 rows. Do we have 24 notes? I don’t think so. There are only 12 notes. But perhaps this is reflecting the start and end of the note.\nLet’s just inspect the columns that have data. Note is making sense\n\nmfr$df_notes_long |&gt;\n    select(note, i_note, ticks, b) |&gt;\n    gt()\n\n\n\n\n\n  \n    \n    \n      note\n      i_note\n      ticks\n      b\n    \n  \n  \n    62\n1\n0\n0\n    62\n2\n768\n8\n    69\n1\n768\n8\n    69\n2\n1536\n16\n    65\n1\n1536\n16\n    65\n2\n2304\n24\n    62\n3\n2304\n24\n    62\n4\n3072\n32\n    61\n1\n3072\n32\n    61\n2\n3840\n40\n    62\n5\n3840\n40\n    62\n6\n4224\n44\n    64\n1\n4224\n44\n    64\n2\n4608\n48\n    65\n3\n4608\n48\n    65\n4\n5568\n58\n    67\n1\n5568\n58\n    67\n2\n5760\n60\n    65\n5\n5760\n60\n    65\n6\n5952\n62\n    64\n3\n5952\n62\n    64\n4\n6144\n64\n    62\n7\n6144\n64\n    62\n8\n6528\n68\n  \n  \n  \n\n\n\n\nWe’re getting somewhere, and the internet tells me middle C is 60, so 62 is D. Ticks seems to be the timepoint. But long format is not quite what I want, I can now see. I want to map note to note. Let’s try wide.\n\nmfr$df_notes_wide |&gt; skimr::skim()\n\n\nData summary\n\n\nName\nmfr$df_notes_wide\n\n\nNumber of rows\n24\n\n\nNumber of columns\n9\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nlogical\n1\n\n\nnumeric\n8\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nmeta\n0\n1\n0\nFAL: 24\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ni_track\n0\n1\n1.00\n0.00\n1\n1.00\n1.0\n1.00\n1\n▁▁▇▁▁\n\n\nprogram\n24\n0\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nchannel\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nnote\n0\n1\n64.00\n2.32\n61\n62.00\n64.0\n65.00\n69\n▇▃▅▂▂\n\n\ni_note\n0\n1\n3.17\n2.08\n1\n1.75\n2.5\n4.25\n8\n▇▂▃▁▁\n\n\nvelocity_note_on\n0\n1\n45.00\n45.97\n0\n0.00\n45.0\n90.00\n90\n▇▁▁▁▇\n\n\nticks_note_on\n0\n1\n3920.00\n1995.26\n0\n2304.00\n4224.0\n5760.00\n6528\n▂▃▃▃▇\n\n\nb_note_on\n0\n1\n40.83\n20.78\n0\n24.00\n44.0\n60.00\n68\n▂▃▃▃▇\n\n\n\n\n\nArgh what does this look like?\n\nmfr$df_notes_wide |&gt; head() |&gt; gt()\n\n\n\n\n\n  \n    \n    \n      i_track\n      meta\n      program\n      channel\n      note\n      i_note\n      velocity_note_on\n      ticks_note_on\n      b_note_on\n    \n  \n  \n    1\nFALSE\nNaN\n0\n62\n1\n90\n0\n0\n    1\nFALSE\nNaN\n0\n62\n2\n0\n768\n8\n    1\nFALSE\nNaN\n0\n69\n1\n90\n768\n8\n    1\nFALSE\nNaN\n0\n69\n2\n0\n1536\n16\n    1\nFALSE\nNaN\n0\n65\n1\n90\n1536\n16\n    1\nFALSE\nNaN\n0\n65\n2\n0\n2304\n24\n  \n  \n  \n\n\n\n\nHmm, still not that useful. And I still can’t seem to dig out what these fields are.\nLet’s try this pivot function.\n\nmfr$dfm\n\n# A tibble: 35 × 18\n   i_track meta  type     name  text  program channel key    note velocity ticks\n     &lt;dbl&gt; &lt;lgl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1       0 TRUE  track_n… \"\"     &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 2       0 TRUE  text      &lt;NA&gt; \"cre…     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 3       0 TRUE  text      &lt;NA&gt; \"GNU…     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 4       0 TRUE  time_si…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 5       0 TRUE  set_tem…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 6       0 TRUE  end_of_…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN  6528\n 7       1 FALSE program…  &lt;NA&gt;  &lt;NA&gt;      19       0 &lt;NA&gt;    NaN      NaN     0\n 8       1 FALSE program…  &lt;NA&gt;  &lt;NA&gt;      19       0 &lt;NA&gt;    NaN      NaN     0\n 9       1 TRUE  instrum… \"chu…  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n10       1 TRUE  key_sig…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN Dm      NaN      NaN     0\n# ℹ 25 more rows\n# ℹ 7 more variables: b &lt;dbl&gt;, i_note &lt;dbl&gt;, tempo &lt;dbl&gt;, numerator &lt;dbl&gt;,\n#   denominator &lt;dbl&gt;, clocks_per_click &lt;dbl&gt;,\n#   notated_32nd_notes_per_beat &lt;dbl&gt;\n\n# this looks useful\nmfr$ticks_per_beat\n\n[1] 384\n\n\nI still don’t understand all these fields."
  },
  {
    "objectID": "hellobach.html#abandoned-garageband-to-midi-bossfight",
    "href": "hellobach.html#abandoned-garageband-to-midi-bossfight",
    "title": "Hello, Bach.",
    "section": "Abandoned Garageband to midi bossfight",
    "text": "Abandoned Garageband to midi bossfight\nMy first attempt at exporting data from garageband failed. I tried converting the raw garageband file but this was not recognised. On closer inspection, it seems I need to dig through this post deeper if I were to successfully convert garageband to midi.\n\npath_to_midi &lt;- '../midi/dimus.band.mid'\n\nmfr &lt;- MidiFramer$new(path_to_midi)\n\nMThd not found. Probably not a MIDI file\n\n\nThe console tells me Probably not a MIDI file.\nHappily the wikipedia page for Contrapunctus I (from which the image of the motif is sourced) provides a midi file of not only the subject, but the entire fugue. So, for the first two stages of digmus, I now have midi!"
  },
  {
    "objectID": "hellobach.html#oh-fuck-it",
    "href": "hellobach.html#oh-fuck-it",
    "title": "Hello, Bach.",
    "section": "Oh, fuck it",
    "text": "Oh, fuck it\nOn closer inspection, the long data has everything I need. note tells me the note, and we are just in one octave. And it seems that b tells me the beat of the bar the note falls on. I find this format a little confusing, so let’s convert the data to something I find interpretable and see if my assumptions are correct.\n\nhard_to_interpret_dat &lt;- mfr$df_notes_long |&gt; select(note, b) |&gt; distinct()\n\nhard_to_interpret_dat |&gt; gt()\n\n\n\n\n\n  \n    \n    \n      note\n      b\n    \n  \n  \n    62\n0\n    62\n8\n    69\n8\n    69\n16\n    65\n16\n    65\n24\n    62\n24\n    62\n32\n    61\n32\n    61\n40\n    62\n40\n    62\n44\n    64\n44\n    64\n48\n    65\n48\n    65\n58\n    67\n58\n    67\n60\n    65\n60\n    65\n62\n    64\n62\n    64\n64\n    62\n64\n    62\n68\n  \n  \n  \n\n\n\n\n\n# create transformations on long then pivot\n\n# oh fuck it will just hardcode the scale\nd_minor &lt;- c('D', 'E', 'F', 'G', 'A', 'Bb', 'C#')\n\n# need to set up a modulo on this, but key/context matters \n# couldn't find a nice R function for this, might need to engineer \n# what I need\n# but for now, we shall hardcode\nnote &lt;- c(62, 64, 65, 67, 69, 70, 61)\n\nd_minor &lt;- tibble(d_minor, note)\n\nnrow(hard_to_interpret_dat |&gt; left_join(d_minor))\n\nJoining with `by = join_by(note)`\n\n\n[1] 24\n\nhard_to_interpret_dat |&gt;\n    left_join(d_minor) |&gt;\n    mutate(step = rep.int(c('start', 'stop'), times = 12), \n        index = rep(seq(1, 12), each = 2)) |&gt;\n        pivot_wider(names_from = step, values_from = b) |&gt;\n        mutate(start_bar = start %% 16)\n\nJoining with `by = join_by(note)`\n\n\n# A tibble: 12 × 6\n    note d_minor index start  stop start_bar\n   &lt;dbl&gt; &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1    62 D           1     0     8      0   \n 2    69 A           2     8    16      8   \n 3    65 F           3    16    24      0   \n 4    62 D           4    24    32      8   \n 5    61 C#          5    32    40      0   \n 6    62 D           6    40    44      8.00\n 7    64 E           7    44    48     12   \n 8    65 F           8    48    58     16   \n 9    67 G           9    58    60     10.0 \n10    65 F          10    60    62     12   \n11    64 E          11    62    64     14   \n12    62 D          12    64    68      0"
  },
  {
    "objectID": "first_exploration.html",
    "href": "first_exploration.html",
    "title": "First explorations",
    "section": "",
    "text": "# general datasci toolkit packages\nlibrary(tidyverse) # grabbag of datasci tools\nlibrary(gt) # for tables\nlibrary(janitor) # clean_names converts names to snake case"
  },
  {
    "objectID": "first_exploration.html#abandoned-garageband-to-midi-bossfight",
    "href": "first_exploration.html#abandoned-garageband-to-midi-bossfight",
    "title": "First explorations",
    "section": "Abandoned Garageband to midi bossfight",
    "text": "Abandoned Garageband to midi bossfight\nMy first attempt at exporting data from garageband failed. I tried converting the raw garageband file but this was not recognised. On closer inspection, it seems I need to dig through this post deeper if I were to successfully convert garageband to midi.\n\npath_to_midi &lt;- '../midi/dimus.band.mid'\n\nmfr &lt;- MidiFramer$new(path_to_midi)\n\nMThd not found. Probably not a MIDI file\n\n\nThe console tells me Probably not a MIDI file.\nHappily the wikipedia page for Contrapunctus I (from which the image of the motif is sourced) provides a midi file of not only the subject, but the entire fugue. So, for the first two stages of digmus, I now have midi!"
  },
  {
    "objectID": "first_exploration.html#importing-midi-to-r",
    "href": "first_exploration.html#importing-midi-to-r",
    "title": "First explorations",
    "section": "Importing midi to R",
    "text": "Importing midi to R\n\nmfr &lt;- MidiFramer$new('../midi/wikisource-contrapunctus-subject.midi')\n\nLet’s take a look at what we get.\n\n# we have data! \n\nmfr\n\n&lt;MidiFramer&gt;\n  Public:\n    clone: function (deep = FALSE) \n    df_meta: data.frame\n    df_not_notes: data.frame\n    df_notes_long: tbl_df, tbl, data.frame\n    df_notes_wide: tbl_df, tbl, data.frame\n    dfm: tbl_df, tbl, data.frame\n    initialize: function (midi_file_string = NULL) \n    mf: miditapyr.midi_frame.MidiFrames, python.builtin.object\n    midi_file_string: ../midi/wikisource-contrapunctus-subject.midi\n    midi_frame_mod: tbl_df, tbl, data.frame\n    params: list\n    play: function (audiofile = tempfile(\"mf_out_\", fileext = \".mp3\"), \n    populate_r_fields: function () \n    ticks_per_beat: active binding\n    update_notes_wide: function (mod) \n  Private:\n    deep_clone: function (name, value) \n\n\nLet’s dig into these objects and see what we have.\n\nmfr$df_notes_long |&gt; skimr::skim()\n\n\nData summary\n\n\nName\nmfr$df_notes_long\n\n\nNumber of rows\n24\n\n\nNumber of columns\n9\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nlogical\n1\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntype\n0\n1\n7\n7\n0\n1\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nmeta\n0\n1\n0\nFAL: 24\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ni_track\n0\n1\n1.00\n0.00\n1\n1.00\n1.0\n1.00\n1\n▁▁▇▁▁\n\n\nchannel\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nnote\n0\n1\n64.00\n2.32\n61\n62.00\n64.0\n65.00\n69\n▇▃▅▂▂\n\n\ni_note\n0\n1\n3.17\n2.08\n1\n1.75\n2.5\n4.25\n8\n▇▂▃▁▁\n\n\nvelocity\n0\n1\n45.00\n45.97\n0\n0.00\n45.0\n90.00\n90\n▇▁▁▁▇\n\n\nticks\n0\n1\n3920.00\n1995.26\n0\n2304.00\n4224.0\n5760.00\n6528\n▂▃▃▃▇\n\n\nb\n0\n1\n40.83\n20.78\n0\n24.00\n44.0\n60.00\n68\n▂▃▃▃▇\n\n\n\n\n\nThis one has notes, that’s useful. Perhaps b is useful, let’s find out. This has 24 rows. Do we have 24 notes? I don’t think so. There are only 12 notes. But perhaps this is reflecting the start and end of the note.\nLet’s just inspect the columns that have data. Note is making sense\n\nmfr$df_notes_long |&gt;\n    select(note, i_note, ticks, b) |&gt;\n    gt()\n\n\n\n\n\n  \n    \n    \n      note\n      i_note\n      ticks\n      b\n    \n  \n  \n    62\n1\n0\n0\n    62\n2\n768\n8\n    69\n1\n768\n8\n    69\n2\n1536\n16\n    65\n1\n1536\n16\n    65\n2\n2304\n24\n    62\n3\n2304\n24\n    62\n4\n3072\n32\n    61\n1\n3072\n32\n    61\n2\n3840\n40\n    62\n5\n3840\n40\n    62\n6\n4224\n44\n    64\n1\n4224\n44\n    64\n2\n4608\n48\n    65\n3\n4608\n48\n    65\n4\n5568\n58\n    67\n1\n5568\n58\n    67\n2\n5760\n60\n    65\n5\n5760\n60\n    65\n6\n5952\n62\n    64\n3\n5952\n62\n    64\n4\n6144\n64\n    62\n7\n6144\n64\n    62\n8\n6528\n68\n  \n  \n  \n\n\n\n\nWe’re getting somewhere, and the internet tells me middle C is 60, so 62 is D. Ticks seems to be the timepoint. But long format is not quite what I want, I can now see. I want to map note to note. Let’s try wide.\n\nmfr$df_notes_wide |&gt; skimr::skim()\n\n\nData summary\n\n\nName\nmfr$df_notes_wide\n\n\nNumber of rows\n24\n\n\nNumber of columns\n9\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nlogical\n1\n\n\nnumeric\n8\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nmeta\n0\n1\n0\nFAL: 24\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ni_track\n0\n1\n1.00\n0.00\n1\n1.00\n1.0\n1.00\n1\n▁▁▇▁▁\n\n\nprogram\n24\n0\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nchannel\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nnote\n0\n1\n64.00\n2.32\n61\n62.00\n64.0\n65.00\n69\n▇▃▅▂▂\n\n\ni_note\n0\n1\n3.17\n2.08\n1\n1.75\n2.5\n4.25\n8\n▇▂▃▁▁\n\n\nvelocity_note_on\n0\n1\n45.00\n45.97\n0\n0.00\n45.0\n90.00\n90\n▇▁▁▁▇\n\n\nticks_note_on\n0\n1\n3920.00\n1995.26\n0\n2304.00\n4224.0\n5760.00\n6528\n▂▃▃▃▇\n\n\nb_note_on\n0\n1\n40.83\n20.78\n0\n24.00\n44.0\n60.00\n68\n▂▃▃▃▇\n\n\n\n\n\nArgh what does this look like?\n\nmfr$df_notes_wide |&gt; head() |&gt; gt()\n\n\n\n\n\n  \n    \n    \n      i_track\n      meta\n      program\n      channel\n      note\n      i_note\n      velocity_note_on\n      ticks_note_on\n      b_note_on\n    \n  \n  \n    1\nFALSE\nNaN\n0\n62\n1\n90\n0\n0\n    1\nFALSE\nNaN\n0\n62\n2\n0\n768\n8\n    1\nFALSE\nNaN\n0\n69\n1\n90\n768\n8\n    1\nFALSE\nNaN\n0\n69\n2\n0\n1536\n16\n    1\nFALSE\nNaN\n0\n65\n1\n90\n1536\n16\n    1\nFALSE\nNaN\n0\n65\n2\n0\n2304\n24\n  \n  \n  \n\n\n\n\nHmm, still not that useful. And I still can’t seem to dig out what these fields are.\nLet’s try this pivot function.\n\nmfr$dfm\n\n# A tibble: 35 × 18\n   i_track meta  type     name  text  program channel key    note velocity ticks\n     &lt;dbl&gt; &lt;lgl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1       0 TRUE  track_n… \"\"     &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 2       0 TRUE  text      &lt;NA&gt; \"cre…     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 3       0 TRUE  text      &lt;NA&gt; \"GNU…     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 4       0 TRUE  time_si…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 5       0 TRUE  set_tem…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n 6       0 TRUE  end_of_…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN  6528\n 7       1 FALSE program…  &lt;NA&gt;  &lt;NA&gt;      19       0 &lt;NA&gt;    NaN      NaN     0\n 8       1 FALSE program…  &lt;NA&gt;  &lt;NA&gt;      19       0 &lt;NA&gt;    NaN      NaN     0\n 9       1 TRUE  instrum… \"chu…  &lt;NA&gt;     NaN     NaN &lt;NA&gt;    NaN      NaN     0\n10       1 TRUE  key_sig…  &lt;NA&gt;  &lt;NA&gt;     NaN     NaN Dm      NaN      NaN     0\n# ℹ 25 more rows\n# ℹ 7 more variables: b &lt;dbl&gt;, i_note &lt;dbl&gt;, tempo &lt;dbl&gt;, numerator &lt;dbl&gt;,\n#   denominator &lt;dbl&gt;, clocks_per_click &lt;dbl&gt;,\n#   notated_32nd_notes_per_beat &lt;dbl&gt;\n\n# this looks useful\nmfr$ticks_per_beat\n\n[1] 384\n\n\nI still don’t understand all these fields."
  },
  {
    "objectID": "first_exploration.html#oh-fuck-it",
    "href": "first_exploration.html#oh-fuck-it",
    "title": "First explorations",
    "section": "Oh, fuck it",
    "text": "Oh, fuck it\nOn closer inspection, the long data has everything I need. note tells me the note, and we are just in one octave. And it seems that b tells me the beat of the bar the note falls on. I find this format a little confusing, so let’s convert the data to something I find interpretable and see if my assumptions are correct.\n\nhard_to_interpret_dat &lt;- mfr$df_notes_long |&gt; select(note, b) |&gt; distinct()\n\nhard_to_interpret_dat |&gt; gt()\n\n\n\n\n\n  \n    \n    \n      note\n      b\n    \n  \n  \n    62\n0\n    62\n8\n    69\n8\n    69\n16\n    65\n16\n    65\n24\n    62\n24\n    62\n32\n    61\n32\n    61\n40\n    62\n40\n    62\n44\n    64\n44\n    64\n48\n    65\n48\n    65\n58\n    67\n58\n    67\n60\n    65\n60\n    65\n62\n    64\n62\n    64\n64\n    62\n64\n    62\n68\n  \n  \n  \n\n\n\n\n\n# create transformations on long then pivot\n\n# oh fuck it will just hardcode the scale\nd_minor &lt;- c('D', 'E', 'F', 'G', 'A', 'Bb', 'C#')\n\n# need to set up a modulo on this, but key/context matters \n# couldn't find a nice R function for this, might need to engineer \n# what I need\n# but for now, we shall hardcode\nnote &lt;- c(62, 64, 65, 67, 69, 70, 61)\n\nd_minor &lt;- tibble(d_minor, note)\n\nnrow(hard_to_interpret_dat |&gt; left_join(d_minor))\n\nJoining with `by = join_by(note)`\n\n\n[1] 24\n\nhard_to_interpret_dat |&gt;\n    left_join(d_minor) |&gt;\n    mutate(step = rep.int(c('start', 'stop'), times = 12), \n        index = rep(seq(1, 12), each = 2)) |&gt;\n        pivot_wider(names_from = step, values_from = b) |&gt;\n        mutate(start_bar = start %% 16)\n\nJoining with `by = join_by(note)`\n\n\n# A tibble: 12 × 6\n    note d_minor index start  stop start_bar\n   &lt;dbl&gt; &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1    62 D           1     0     8      0   \n 2    69 A           2     8    16      8   \n 3    65 F           3    16    24      0   \n 4    62 D           4    24    32      8   \n 5    61 C#          5    32    40      0   \n 6    62 D           6    40    44      8.00\n 7    64 E           7    44    48     12   \n 8    65 F           8    48    58     16   \n 9    67 G           9    58    60     10.0 \n10    65 F          10    60    62     12   \n11    64 E          11    62    64     14   \n12    62 D          12    64    68      0"
  }
]